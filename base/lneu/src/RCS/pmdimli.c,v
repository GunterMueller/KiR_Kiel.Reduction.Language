head	1.2;
access;
symbols
	lneu2:1.2
	lneu1:1.1;
locks; strict;
comment	@ * @;


1.2
date	92.10.30.12.17.57;	author car;	state Exp;
branches;
next	1.1;

1.1
date	92.10.29.15.01.49;	author base;	state Exp;
branches;
next	;


desc
@initial version by Leick/Strack
@


1.2
log
@modified version by Rathsack/Scholz
@
text
@

/*----------------------------------------------------------------*/
/*  include files                                                 */
/*                                                                */
/*----------------------------------------------------------------*/

#include "rstdinc.h"
#include "rstackty.h"
#include "rheapty.h"
#include "rstelem.h"
#include "rextern.h"
#include "pminstr.h"


/*----------------------------------------------------------------*/
/* Typdefinitionen Makros                                         */
/*----------------------------------------------------------------*/
#define DESC(x) (*((PTR_DESCRIPTOR)(x)))

extern BOOLEAN _formated;                 /* <r>, ldim, dim */
extern PTR_DESCRIPTOR conv_int_digit();     /* digit-v1:c */
extern PTR_DESCRIPTOR newdesc();            /* heap:c */

extern  StackDesc S_pm;                   /* Hilfsstack, auf den die
                                             Variableninst waehrend des
                                             Matching gepuscht werden */

/*-------------------------------------------------------------*/
/* pmdimli (li_desc) liefert als Resultat einen Descriptor , in*/
/* dem die Laenge des Argumentdeskriptors lidesc steht         */
/*------------------------------------------------------------*/

pmdimli(li_desc)
register STACKELEM li_desc;
{
  register PTR_DESCRIPTOR desc;
  START_MODUL("pmdimli");


    if (_formated)
    {
      NEWDESC(desc);
      DESC_MASK(desc,1,C_SCALAR,TY_INTEGER);
      L_SCALAR((*desc),vali) = R_LIST(DESC(li_desc),dim);
    }
    else
#if LARGE
      if ((desc = conv_int_digit(R_LIST(DESC(li_desc),dim))) == NULL) goto fail;
#else
      goto fail;
#endif 
    goto success;
fail:
  END_MODUL("pmdimli");
  return(0);

success:
  END_MODUL("pmdimli");
  PUSHSTACK(S_i, desc);/* Deskriptor auf i-stack laden */
  return(1);
}


@


1.1
log
@Initial revision
@
text
@d48 1
d50 3
@
