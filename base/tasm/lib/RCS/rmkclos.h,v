head	1.7;
access;
symbols;
locks; strict;
comment	@ * @;


1.7
date	96.04.11.13.27.29;	author cr;	state Exp;
branches;
next	1.6;

1.6
date	95.07.12.14.04.53;	author sf;	state Exp;
branches;
next	1.5;

1.5
date	95.07.12.13.22.09;	author sf;	state Exp;
branches;
next	1.4;

1.4
date	95.07.12.13.15.33;	author sf;	state Exp;
branches;
next	1.3;

1.3
date	95.04.05.15.57.08;	author sf;	state Exp;
branches;
next	1.2;

1.2
date	95.04.05.13.56.38;	author sf;	state Exp;
branches;
next	1.1;

1.1
date	94.12.20.09.21.46;	author sf;	state Exp;
branches;
next	;


desc
@@


1.7
log
@prepare for separate compilation (again:-(
step I: avoid use of program-specific global variables
in tasm-generated code inside initdata.c and rmkclos.c
(cf. compile.c c_output.c)
@
text
@extern void f_mkdclos(int, int, int, int);
extern int f_mkbclos(int, T_PTD);
extern void f_mkgaclos(int, T_PTD, int, int);
extern void f_mkcclos(int, T_PTD);
extern void dyn_mkbclos(int);
@


1.6
log
@*** empty log message ***
@
text
@d2 3
a4 3
extern int f_mkbclos(int, int);
extern void f_mkgaclos(int, int, int, int);
extern void f_mkcclos(int, int);
@


1.5
log
@rmkclos: int -> void
@
text
@d2 1
a2 1
extern void f_mkbclos(int, int);
@


1.4
log
@f_mkbclos: void -> int
@
text
@d2 1
a2 1
extern int f_mkbclos(int, int);
@


1.3
log
@mkgaclos used for mkgsclos
@
text
@d2 1
a2 1
extern void f_mkbclos(int, int);
@


1.2
log
@additional parameter to f_mkdclos()
@
text
@d3 1
a3 1
extern void f_mkgaclos(int, int, int);
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
extern void f_mkdclos(int, int, int);
@
