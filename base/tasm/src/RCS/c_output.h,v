head	1.7;
access;
symbols;
locks; strict;
comment	@ * @;


1.7
date	95.05.16.14.36.18;	author sf;	state Exp;
branches;
next	1.6;

1.6
date	95.05.15.13.34.25;	author sf;	state Exp;
branches;
next	1.5;

1.5
date	95.04.17.13.42.54;	author sf;	state Exp;
branches;
next	1.4;

1.4
date	95.03.09.12.52.54;	author sf;	state Exp;
branches;
next	1.3;

1.3
date	95.01.06.16.47.31;	author sf;	state Exp;
branches;
next	1.2;

1.2
date	94.12.02.09.56.21;	author sf;	state Exp;
branches;
next	1.1;

1.1
date	94.11.21.09.08.01;	author car;	state Exp;
branches;
next	;


desc
@initial incomplete version
@


1.7
log
@call_makefile(), clean_up()
@
text
@#ifndef __C_OUTPUT__
#define __C_OUTPUT__

void c_out_order_list(FUNCTION *);
void c_out_functable(CODE *, int);
void c_build_func_prot(PROGRAM *, const char *);
void c_out_data(PROGRAM *);
void build_makefile(void);
void call_makefile(void);
void clean_up(void);
int search_funcdesc(int);
int searchdata(int);

#endif
@


1.6
log
@another function
@
text
@d9 2
@


1.5
log
@some search functions
@
text
@d4 1
a4 1
void c_out_order_list(ORDER *);
d8 1
@


1.4
log
@key -M for further use
@
text
@d8 2
@


1.3
log
@pointer to data implemented
@
text
@d6 1
a6 1
void c_build_func_prot(PROGRAM *);
@


1.2
log
@minor change
@
text
@d7 1
@


1.1
log
@Initial revision
@
text
@d5 1
a5 1
void c_out_functable(CODE *);
@
